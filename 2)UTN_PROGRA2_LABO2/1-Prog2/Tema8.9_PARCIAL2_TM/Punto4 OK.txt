void punto4b()
{
  
    reparaciones objR;
    Archivoreparaciones ARobjR;
    
    talleres objT;
    Archivotalleres ARobjT;

    int tam1 = ARobjR.contarRegistros();
    int tam2 = ARobjT.contarRegistros();
      
    int cont = 0;

    int codigoTall;
    cout << "ingrese codigo de taller que no quiere guardar";
    cin >> codigoTall;

    for(int i = 0; i < tam2; i++){
        objT = ARobjT.leerRegistro(i);
        if(objT.getCodigoDeTaller() == codigoTall){
            for(int j = 0; j < tam1; j++){
                objR = ARobjR.leerRegistro(j);
                if(objR != objT){
                    cont ++;
                }
            }    
        }    
    }  

    reparaciones *vecReparacion = new reparaciones[cont];
    if(vecReparacion == NULL){cout << "no se pudo crear el vector" << endl; exit(1);}
    
    int index = 0;
    for(int i = 0; i < tam2; i++){
        objT = ARobjT.leerRegistro(i);
        if(objT.getCodigoDeTaller() == codigoTall){
            for(int j = 0; j < tam1; j++){
                objR = ARobjR.leerRegistro(j);
                if(objR != objT){
                    vecReparacion[index++] = objR;
                }
            }    
        }    
    } 

    cout << "LAS REPARACIONES QUE NO ESTAN EN EL TALLER SON: " << endl;
    for(int i = 0; i < cont; i++){
        vecReparacion[i].mostrar();
        cout << endl;
    }
    delete[] vecReparacion;

}